#!/bin/bash

# Set Bash strict mode
set -euo pipefail
IFS=$'\n\t'


RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
BLUE=$(tput setaf 4)
NC=$(tput sgr0)

function on_error {
  echo "${RED}CONFIGURATION WAS UNSUCCESSFUL.${NC}"
}

trap on_error ERR

# Only execute this script on a Proxmox Host Node
if ! command -v pveversion &> /dev/null
then
    echo "This script is intended to run on a Proxmox Host Node. Exiting."
    exit
fi

{% for section in sections %}
# BEGIN: {{section.name}}
echo "${BLUE}{{section.name}} ({{loop.index}} / {{ loop.length}})${NC}"
{{section.content}}
# END: {{section.name}}

{% endfor %}

clear

echo "${GREEN}CONFIGURATION COMPLETED SUCCESSFULLY.${NC}"

cat <<- "EOF"

Next Steps:
  * Navigate to the Proxmox web GUI at https://{{ shared_globals['fqdn'] }}:8006
  * Add Wireguard VPN Clients by cd'ing into ./wireguard and running ./easy-wg-quick
  * Add a container from the CLI using something like:
    
    pveam download local ubuntu-20.04-standard_20.04-1_amd64.tar.gz
    
    pct create 100 \
    local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz \
    --cores 2 --cpuunits 1024 \
    --memory 4096 --swap 128 \
    --hostname somehostname.improve.software \
    --net0 name=enp2s0,ip=10.0.1.2/24,bridge=vmbr0,gw=10.0.1.1 \
    --net1 name=enp2s1,ip=88.198.81.74/29,bridge=vmbr1 \
    --rootfs thin-pool:8 \
    --onboot 1
EOF


# Generated by https://github.com/johnknott/proxmox-hetzner-autoconfigure